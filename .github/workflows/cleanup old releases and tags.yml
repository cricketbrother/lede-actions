name: cleanup old releases and tags
on:
  schedule:
    - cron: '0 23 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: List all tags
      run: |
        git fetch --prune --unshallow
        git tag -n

    - name: Delete old releases and tags
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        DELETE_DATE=$(date -u -d "15 days ago" +"%Y-%m-%dT%H:%M:%SZ")

        RELEASES=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases")
        for row in $(echo "$RELEASES" | jq -r '.[] | @base64'); do
          _jq() {
            echo "$row" | base64 --decode | jq -r "$1"
          }
          RELEASE_DATE=$(_jq '.published_at')

          if [[ "$RELEASE_DATE" < "$DELETE_DATE" ]]; then
            RELEASE_ID=$(_jq '.id')
            echo "Deleting Release: $RELEASE_ID, $RELEASE_DATE"
            curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          fi
        done

        TAGS=$(git tag -n | grep -E "^v[0-9]{4}\.[0-9]{2}\.[0-9]{2}" | awk '{print $1}')
        for TAG in $TAGS; do
          TAG_DATE=$(git log -1 --format=%ai $TAG)
          if [[ "$TAG_DATE" < "$DELETE_DATE" ]]; then
            echo "Deleting Tag: $TAG"
            git push --delete origin $TAG
          fi
        done
