name: lede-x86_64

on:
  schedule:
    - cron: 0 18 * * *
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install compilation dependencies
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Set tag
        id: tag
        run: |
          tag=$(date +"v%Y.%m.%d")
          echo "tag=$tag" >> $GITHUB_OUTPUT

      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          repository: coolsnowwolf/lede
          ref: master

      - name: Set default manage ip
        run: |
          sed -i 's/192.168.1.1/192.168.5.1/g' package/base-files/files/bin/config_generate

      - name: Edit feeds.conf.default
        run: |
          echo "src-git kenzo https://github.com/kenzok8/openwrt-packages" >> feeds.conf.default     
          echo "src-git small https://github.com/kenzok8/small" >> feeds.conf.default

      - name: Update & install feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Make config
        run: |
          echo "CONFIG_TARGET_x86=y" > .config
          echo "CONFIG_TARGET_x86_64=y" >> .config
          echo "CONFIG_TARGET_x86_64_DEVICE_generic=y" >> .config
          echo "CONFIG_GRUB_IMAGES=y" >> .config
          echo "CONFIG_QCOW2_IMAGES=y" >> .config
          echo "# CONFIG_TARGET_IMAGES_GZIP is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-accesscontrol is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-adbyby-plus is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-arpbind is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-autoreboot is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-ddns is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-ipsec-vpnd is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-nlbwmon is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-unblockmusic is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-vsftpd is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-wireguard is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-wol is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-xlnetacc is not set" >> .config
          echo "# CONFIG_PACKAGE_luci-app-zerotier is not set" >> .config
          make defconfig

      - name: Make download
        run: |
          make download -j8

      - name: Make
        run: |
          make -j2

      - name: Rename firmwares
        run: |
          release_version=$(date +"%Y%m%d")
          lede_version=$(cat package/lean/default-settings/files/zzz-default-settings | egrep -o "R[0-9]{2}\.[0-9]{1,2}\.[0-9]{1,2}")
          for file in $(ls bin/targets/x86/64/openwrt*); do
            if [ -f "$file" ]; then
              ext="${file##*.}"
              filename="${file%.*}"
              new_file="$filename-$lede_version-$release_version.$ext"
              mv "$file" "$new_file"
            fi
          done

      - name: Get apps
        id: apps
        run: |
          app_list=$(cat .config | grep -v "^#" | egrep "PACKAGE_luci-app-[^_]*=y" | egrep -o "luci-app-[^=]*[a-zA-Z0-9]")
          apps=$(echo "$app_list" | tr "\n" "/")
          echo "apps=$apps" >> $GITHUB_OUTPUT          
  
      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: bin/targets/x86/64/*
          tag_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
          body: |
            ## 说明
            1. 本固件基于 [coolsnowwolf/lede](https://github.com/coolsnowwolf/lede) 自动编译而成，适用于x86_64平台
            2. 本固件包含BIOS和UEFI两种引导方式
            3. 本固件包含img/vmdk/qcow2三种格式
            4. 本固件默认管理地址为：[http://192.168.5.1](http://192.168.5.1) ，用户名：root，密码：password
            5. 本固件包含以下APP：${{ steps.apps.outputs.apps }}
